[{"/home/dave/Documents/work/react-to-do-list-app/todoapp/src/index.js":"1","/home/dave/Documents/work/react-to-do-list-app/todoapp/src/App.js":"2","/home/dave/Documents/work/react-to-do-list-app/todoapp/src/reportWebVitals.js":"3","/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/Todos.js":"4","/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/TodoItem.js":"5","/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/layout/Header.js":"6","/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/AddTodo.js":"7","/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/pages/Notes.js":"8","/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/pages/About.js":"9"},{"size":478,"mtime":1607945712960,"results":"10","hashOfConfig":"11"},{"size":2172,"mtime":1608277591216,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607944503945,"results":"13","hashOfConfig":"11"},{"size":571,"mtime":1608184301153,"results":"14","hashOfConfig":"11"},{"size":1369,"mtime":1608316183039,"results":"15","hashOfConfig":"11"},{"size":1012,"mtime":1608212857584,"results":"16","hashOfConfig":"11"},{"size":1051,"mtime":1608316041836,"results":"17","hashOfConfig":"11"},{"size":221,"mtime":1608200779534,"results":"18","hashOfConfig":"11"},{"size":220,"mtime":1608200901213,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1paw6uv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/dave/Documents/work/react-to-do-list-app/todoapp/src/index.js",[],["41","42"],"/home/dave/Documents/work/react-to-do-list-app/todoapp/src/App.js",["43"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport Notes from './components/pages/Notes';\nimport axios from 'axios';\nimport DarkTheme, { createTheme } from 'react-dark-theme';\n\n\nconst lightTheme = {\n  background: 'white',\n  text: 'black',\n}\n \nconst darkTheme = {\n  background: '#121212',\n  text: 'white',\n}\n\nconst myTheme = createTheme(darkTheme, lightTheme)\n\n\nclass App extends Component {\n  state = {\n    todos: [ ]\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=16').then(res => this.setState({ todos: res.data }))\n  }\n\n  //toggle complete\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id){\n        todo.completed = !todo.completed\n      }\n      return todo;\n    })})\n  }\n\n  //delete todo\n  delTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)]}));\n  }\n  //add todo\n  addTodo = (title) => {\n   axios.post('https://jsonplaceholder.typicode.com/todos',{\n     title,\n     completed:false\n   })\n   .then(res => this.setState({ todos:[...this.state.todos, res.data] }))\n  }\n  render() {\n    return (\n      <Router>\n      <div className='App' style={{ backgroundColor: myTheme.background, color: myTheme.text }}>\n      {/* <DarkTheme light={lightTheme} dark={darkTheme} /> */}\n        <div className=\"container\">\n        <Header />\n        <Route exact path='/' render={props => (\n          <React.Fragment>\n            <AddTodo addTodo={this.addTodo}/>\n            <Todos todos={this.state.todos}\n            markComplete={this.markComplete}\n            delTodo={this.delTodo}/>\n          </React.Fragment>\n        )}/>\n          <Route path='/notes' component={Notes}/>\n          <Route path='/about' component={About}/>\n        </div>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/home/dave/Documents/work/react-to-do-list-app/todoapp/src/reportWebVitals.js",[],"/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/Todos.js",[],"/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/TodoItem.js",[],"/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/layout/Header.js",["44"],"import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DarkTheme, { createTheme } from 'react-dark-theme';\n\n\nconst lightTheme = {\n    background: 'white',\n    text: 'black',\n  }\n   \n  const darkTheme = {\n    background: '#121212',\n    text: 'white',\n  }\n  \n  const myTheme = createTheme(darkTheme, lightTheme)\n\nfunction Header() {\n    return (\n        <header className='headerStyle' style={headerStyle}  >\n            \n             <DarkTheme light={lightTheme} dark={darkTheme} />\n            <h1 className='todoheader'>Create you todolist !..</h1>\n            <Link style={linkStyle} to='/'>Home</Link> | <Link style={linkStyle} to='/notes'>Notes</Link> | <Link style={linkStyle} to='/about'>About</Link>\n        </header>\n    )\n}\n\nconst headerStyle = {\n    background:'#333',\n    color:'#fff',\n    textAlign:'center',\n    padding:'10px'\n}\n\nconst linkStyle = {\n    color: 'rgb(206, 92, 92)',\n    textDecoration:'none',\n    margin:'1.5rem',\n    fontFamily:'monospace'\n}\nexport default Header;","/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/AddTodo.js",[],"/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/pages/Notes.js",[],"/home/dave/Documents/work/react-to-do-list-app/todoapp/src/components/pages/About.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":9,"column":8,"nodeType":"51","messageId":"52","endLine":9,"endColumn":17},{"ruleId":"49","severity":1,"message":"53","line":16,"column":9,"nodeType":"51","messageId":"52","endLine":16,"endColumn":16},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'DarkTheme' is defined but never used.","Identifier","unusedVar","'myTheme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]